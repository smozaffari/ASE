#!/bin/bash
#PBS -e second.err
#PBS -o second.log
#PBS -l nodes=1:ppn=4
#PBS -l mem=8gb
#PBS -l walltime=00:30:00
#PBS -M smozaffari@uchicago.edu
#PBS -m abe

cd $PBS_O_WORKDIR
echo $PBS_O_WORKDIR

#export PATH="/home/smozaffari/anaconda/bin:$PATH"

module load bowtie2
module load samtools
module load parallel

umask 022

echo "%%% Begin at " $(date)
echo "Submitted as:" $WHOAMI
echo "running jobs in "$PWD
echo "$SCRIPTDIR"
echo "$FLOWCELLFINDIV"
echo "$JOBSPERNODE"
echo "$INPUTDIR"
echo "$SNP_DIR"
echo "$PBS_JOBNAME"

echo $NUM
export WASP=/group/ober-resources/users/smozaffari/ASE/bin/scripts/WASP

#scriptName=$(basename ${0})
#echo $scriptName
#scriptName=${scriptName%\.sh}
#echo $scriptName

#timeTag=$(date "+%y_%m_%d_%H_%M_%S")

ID=$(echo "$FLOWCELLFINDIV" | sed 's/\//./g')
FINDIV=$(echo "$FLOWCELLFINDIV" | awk -F'/' '{print $2}')
echo "$ID $FINDIV"
plog=$PWD/${LOGNAME}_second_${FINDIV}.log
echo $plog
maplog=$PWD/mapping.log
echo $maplog

#echo "RUNNING $scriptName as " $(readlink -f $0 ) " on " `date`  | tee  $plog
#plog=$inputDir/python_WASP_$num

echo "SCRIPTDIR:" $SCRIPTDIR

READ=$INPUTDIR/$FLOWCELLFINDIV
echo "$READ"

for file in "$READ"/*; do
    if [ "$fastqList" ]; then
       fastqList="${fastqList},${file}"
       echo $fastqList
    else
       fastqList=$file
    fi
done

FIND_SNPS() {

    read=$1
    echo $read
    findiv=$2
    echo $2
    echo $findiv
    echo $3
    snp_dir=$4
    
    #map files:
    bowtie2 -p 4 --very-fast --phred33 -x /group/referenceFiles/Homo_sapiens/UCSC/hg19/Sequence/IlluminaBowtie2Index/genome -U $read/$3 -S $read/${findiv}.sam
    echo "bowtie2 -p 4 --very-fast --phred33 -x /group/referenceFiles/Homo_sapiens/UCSC/hg19/Sequence/IlluminaBowtie2Index/genome -U $3 -S $read/${findiv}/.sam"
    samtools view -S -h -q 10 -b $read/${findiv}.sam > $read/${findiv}.bam
    samtools sort $read/${findiv}.bam $read/${findiv}.sorted.bam
    samtools view -c $read/${findiv}.sorted.bam > ${findiv}.sorted.txt
    samtools index $read/${findiv}.sorted.bam 

    #first part of WASP:

#    python $WASP/mapping/find_intersecting_snps.py $read/${findiv}.sorted.bam  $snp_dir
    
    #remap files:

#    bowtie2 -p 4 --very-fast --phred33 -x /group/referenceFiles/Homo_sapiens/UCSC/hg19/Sequence/IlluminaBWAIndex/genome.fa $INPUTDIR/${base}.remap.fq.gz > $INPUTDIR/${base}.sai              
#    samtools view -S -b -h -q 10 $INPUTDIR/${base}.sam >  $INPUTDIR/${base}.remap.bam


    #WASP:
#    python $WASP/mapping/filter_remapped_reads.py $INPUTDIR/${base}.to.remap.bam $INPUTDIR/${base}.remap.bam $INPUTDIR/${base}.remap.keep.bam $INPUTDIR/${base}.to.remap.num.gz
#    echo "python $WASP/mapping/filter_remapped_reads.py $INPUTDIR/${base}.to.remap.bam $INPUTDIR/${base}.remap.bam $INPUTDIR/${base}.remap.keep.bam $INPUTDIR/${base}.to.remap.num.gz"

    #merged bamfile:
#    samtools merge $INPUTDIR/${base}.keep.merged.bam $INPUTDIR/${base}.keep.bam $INPUTDIR/${base}.remap.keep.bam
#    samtools sort $INPUTDIR/${base}.keep.merged.bam $INPUTDIR/${base}.keep.merged.sorted
#    samtools index $INPUTDIR/${base}.keep.merged.sorted.bam
#    echo "samtools merge $INPUTDIR/${base}.keep.merged.bam $INPUTDIR/${base}.keep.bam $INPUTDIR/${base}.remap.keep.bam"
#    echo "samtools sort $INPUTDIR/${base}.keep.merged.bam $INPUTDIR/${base}.keep.merged.sorted"
#    echo "samtools index $INPUTDIR/${base}.keep.merged.sorted.bam"

    #WASP:
#    python $WASP/mapping/rmdup.py $INPUTDIR/${base}.keep.merged.sorted.bam $INPUTDIR/${base}.keep.rmdup.merged.sorted.bam
    
}


export -f FIND_SNPS

echo $fastqList

# Check periodically for activity keep only my processes, once and hour for 20 hours
# to figure out whether we are reasonably load balanced
# NOTE: WHOAMI is exported from calling pbs script
top -b -d 3600.00 -n 20 -u $WHOAMI >> ${destdir}/topLog.${runStamp} 2>&1 &

FIND_SNPS $READ $FINDIV $fastqList $SNP_DIR >>$plog 2>&1 
echo "FIND_SNPS $READ $FINDIV $fastqList $SNP_DIR >>$plog 2>&1"

